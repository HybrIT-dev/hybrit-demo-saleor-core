name: $(Date:yyyyMMdd)-$(Rev:r)

trigger:
  branches:
    include:
      - master
  paths:
    exclude:
      - readme.md

pr:
  branches:
    include:
    - master

resources:
  repositories:
    - repository: templates
      type: github
      name: HybrIT-dev/hybrit-azuredevops-templates
      ref: refs/heads/master
      endpoint: HybrIT-dev

variables:
- group: nexus
- name: artifactName
  value: hybrit-demo-saleor-core

stages:
  - stage: Build
    dependsOn: []
    jobs:  
      - job: Docker
        steps:
        - checkout: self
          persistCredentials: true
        - template: gitsecret.template.yml@templates
          parameters:
            cicduser: $(nexus-email)
            secrets:
              - name: cicdprivatekey
                secureFile: cicd-private-key
              - name: cicdpublickey
                secureFile: cicd-public-key
        - task: GitVersion@5
          displayName: "Use GitVersion"
          inputs:
            runtime: 'core'
            configFilePath: '$(build.sourcesdirectory)/GitVersion.yml'
            additionalArguments: '/output buildserver /nofetch'
        - template: docker.template.yml@templates
          parameters:
            imageName: $(artifactName)
            imageVersion: $(GitVersion.SemVer)
            dockerFile: $(build.sourcesdirectory)/Dockerfile
            dockerRegistryEndpoint: 'Docker - HybrIT - nexus'
        - template: helm.template.yml@templates
          parameters:
            chartName: $(artifactName)
            chartPath: '$(build.sourcesdirectory)/charts/$(artifactName)'
            chartVersion: $(GitVersion.SemVer)
            destination: '$(Build.ArtifactStagingDirectory)/chart'
            nexusUsername: $(nexus-username)
            nexusPassword: $(nexus-password)
            nexusHost: $(nexus-host-helm)
        - task: Bash@3
          displayName: artifact files
          inputs:
            targetType: 'inline'
            script: |
              mkdir -p $(build.artifactstagingdirectory)/drop
              cp $(Build.ArtifactStagingDirectory)/chart/$(artifactName)-$(GitVersion.SemVer).tgz $(build.artifactstagingdirectory)/drop/$(artifactName).tgz
        - publish: $(Build.ArtifactStagingDirectory)/drop
          displayName: "publish artifact"
          artifact: output
  - stage: deploy_test
    displayName: Deploy to test
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    dependsOn: Build
    jobs:
    - deployment: deploy
      displayName: Deploy
      strategy:
        runOnce:
          deploy:
            steps:
            - download: current
              artifact: output
            - task: HelmInstaller@1
              inputs:
                helmVersionToInstall: 'v3.1.0'
            - task: HelmDeploy@0
              displayName: "Install or upgrade saleor core demo"
              inputs:
                connectionType: 'Kubernetes Service Connection'
                kubernetesServiceConnection: 'GPC -  hybrit-dev-weu'
                namespace: 'saleor-demo'
                command: 'upgrade'
                chartType: 'FilePath'
                chartPath: '$(Pipeline.Workspace)/output/$(artifactName).tgz'
                releaseName: '$(artifactName)'